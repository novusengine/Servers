declare class point
    x : number
end

declare class vec2 extends point
    y : number
end

declare class vec3 extends vec2
    z : number
end

declare class vec4 extends vec3
    w : number
end

declare Engine :
{
    Name : string,
    Version : vector
}

type PacketEvent =
{
    Invalid     : number,
    OnReceived  : number,
    Count       : number
};
declare PacketEvent : PacketEvent

declare class Packet
    function GetOpcode(self) : GameOpcode
    function GetSize(self) : number

    function GetI8(self) : number
    function GetI16(self) : number
    function GetI32(self) : number
    function GetI64(self) : number

    function GetU8(self) : number
    function GetU16(self) : number
    function GetU32(self) : number
    function GetU64(self) : number

    function GetF32(self) : number
    function GetF64(self) : number

    function GetString(self) : number
    function GetBytes(self, numBytes : number) : { number }
end

declare function RegisterPacketHandler(event : PacketEvent, gameOpcode : GameOpcode, callback : ((gameOpcode : GameOpcode, size : number, packet : Packet) -> boolean)) : ()
declare function RegisterPacketEvent(event : PacketEvent, callback : ((event : PacketEvent, ...any) -> boolean)) : ()